% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_vdatum_correction.R
\name{get_vdatum_correction}
\alias{get_vdatum_correction}
\title{get_vdatum_correction}
\usage{
get_vdatum_correction(
  midpoint,
  in_region_override = "contiguous",
  s_v_unit_override = "m",
  t_v_unit_override = "m",
  s_h_frame_override = "NAD83_2011",
  s_v_frame_override = "MLLW",
  t_h_frame_override = "NAD83_2011",
  t_v_frame_override = "NAVD88",
  in_epoch_override = lubridate::decimal_date(Sys.time()),
  out_epoch_override = lubridate::decimal_date(Sys.time()),
  is_quiet = FALSE
)
}
\arguments{
\item{midpoint}{the point in space you need to transform}

\item{in_region_override}{vdatum region override, can be ak, as, contiguous, gcnmi, prvi, westcoast, chesapeak_delaware, Default: 'contiguous'}

\item{s_v_unit_override}{source vertical unit, Default: 'm'}

\item{t_v_unit_override}{target vertical unit, Default: 'm'}

\item{s_h_frame_override}{source horozontal projection, Default: 'NAD83_2011'}

\item{s_v_frame_override}{source vertical datum, Default: 'MLLW'}

\item{t_h_frame_override}{target horozontal projeection, Default: 'NAD83_2011'}

\item{t_v_frame_override}{target vertical datum, Default: 'NAVD88'}

\item{in_epoch_override}{in epoch (survey time) as decimal date, Default: lubridate::decimal_date(Sys.time())}

\item{out_epoch_override}{out epoc (desired timestamp) as decimapl date, Default: lubridate::decimal_date(Sys.time())}

\item{is_quiet}{flag to determine whether print statements are suppressed, TRUE to suppress messages and FALSE to show them, Default: FALSE}
}
\value{
numeric
}
\description{
Constructs and gets the offset between datums from the [vdatum](https://vdatum.noaa.gov/vdatumweb/) api
}
\details{
[vdatum](https://vdatum.noaa.gov/vdatumweb/) is a complex api.  This function does not help that.  Because we know the unit transformation needed to fix the datum to our normalized standard (merters as spesified in sf::st_crs("EPSG:6349")), I can make a lot of assumptions about how I get the datum normalization value from this utility.  This function expects a reprojected point and auxilary data and calculates the difference between the input datum at 0 and NAVD88.  From there, the correction can be recorded and applied.  Make note of the pretty direct ramp I deploy to get to this point.  Many of these properties could be infered other ways.
}
\examples{
\dontrun{
if(interactive()){
 #EXAMPLE1
 # See API docs at https://vdatum.noaa.gov/docs/services.html#step170
 }
}
}
\seealso{
\code{\link[lubridate]{decimal_date}}
 \code{\link[glue]{glue}}
}
